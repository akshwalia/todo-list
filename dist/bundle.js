(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t,n,d,c){return{name:e,projectname:t,priority:n,date:d,completed:c}}e.d({},{O:()=>q,w:()=>H});const n=document.querySelector(".rightpanel"),d=document.querySelector(".rightpanelheading"),c=document.querySelector(".tasks");c.innerHTML="";const o=document.createElement("button");o.innerHTML="Add Task";let a=!0;const r=document.querySelector(".popupcontainer");let l=!0;function i(e){if(d.innerHTML=`${e}`,c.innerHTML="yayyy you created project",a&&(a=!1,n.appendChild(o)),o.addEventListener("click",(()=>{!function(e){l=!0,r.classList.remove("hidden");const n=document.querySelector(".formbox"),d=document.querySelector(".buttons");d.innerHTML="";const c=document.createElement("button"),o=document.createElement("button");c.innerHTML="Add",o.innerHTML="Cancel",o.setAttribute("type","button"),c.setAttribute("type","button"),d.appendChild(c),d.appendChild(o),c.addEventListener("click",(()=>{!function(e){const n=document.getElementById("title"),d=document.getElementById("priority"),c=document.getElementById("date");console.log(n.value+" "+d.value+" "+c.value);const o=new t(n.value,e,d.value,c.value,"no");console.log(o),H.push(o),n.value="",d.value="low",c.value=""}(e),r.classList.add("hidden"),l=!1})),o.addEventListener("click",(e=>{r.classList.add("hidden")})),document.addEventListener("keydown",(e=>{l&&"Enter"===e.key&&c.click()})),n.addEventListener("click",(e=>{e.stopPropagation()})),r.addEventListener("click",(e=>{e.stopPropagation(),r.classList.add("hidden")}))}(e)})),H)for(let e of H)console.log(e)}let s=0,u=document.querySelectorAll(".option");function m(){u.forEach((e=>{e.classList.remove("selected")}))}const p=document.querySelector(".projectcontainer");let y=!0;function L(){if(y){const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","inputbox"),e.style.margin="8px 12px";const t=document.createElement("projecticon");t.classList.add("projecticon"),t.style.backgroundColor=`${q[s]}`,s++,6==s&&(s=0);const n=document.createElement("div"),d=document.createElement("div");d.classList.add("option"),d.classList.add("projectoption"),p.appendChild(e),e.focus(),y=!1;let c=!1;document.addEventListener("keydown",(o=>{"Enter"!=o.key||""===e.value||c||(n.innerHTML=`${e.value}`,p.removeChild(e),y=!0,d.appendChild(t),d.appendChild(n),p.appendChild(d),u=document.querySelectorAll(".option"),m(),d.classList.add("selected"),i(e.value),c=!0,document.removeEventListener("keydown",(()=>{})))})),d.addEventListener("click",(()=>{m(),d.classList.add("selected"),i(e.value)}))}else p.removeChild(document.getElementById("inputbox")),y=!0}const v=document.querySelector(".rightpanelheading"),E=document.querySelector(".tasks");function f(e){if(v.innerHTML="Your Today's Tasks",!e.length){E.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),E.appendChild(e),e.addEventListener("click",L)}}const h=document.querySelector(".rightpanelheading"),k=document.querySelector(".tasks"),g=document.getElementById("today"),T=document.getElementById("thisweek"),b=document.getElementById("stickywall"),j=document.querySelector(".addproject"),q=["#ffaeae","#ffee93","#ffc09f","#a39fe1","#fcf5c7","#a0ced9","#adf7b6"];let H=[];f(H),g.addEventListener("click",(()=>{m(),g.classList.add("selected"),f(H)})),T.addEventListener("click",(()=>{m(),T.classList.add("selected"),function(e){if(h.innerHTML="Tasks for this week",console.log(e),!e.length){k.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),k.appendChild(e),e.addEventListener("click",L)}}(H)})),b.addEventListener("click",(()=>{m(),b.classList.add("selected")})),j.addEventListener("click",L)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,