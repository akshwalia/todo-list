(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})}};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var d=o.length-1;d>-1&&!t;)t=o[d--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.d({},{O:()=>G,w:()=>J});const t=e.p+"de7ced177d66bb006694.svg",n=e.p+"c2e6e6dd118d33c26922.svg";let o=1;const d=document.querySelector(".tasks"),c=document.querySelector(".rightpanelheading");function r(e){const c=document.createElement("div");c.classList.add("task");const r=document.createElement("input");r.type="checkbox",r.id=`${o}`,r.classList.add("checkbox");const i=document.createElement("label");i.setAttribute("for",`${o}`),i.innerHTML=`${e.name}`;let s=document.createElement("img");"yes"===e.important?s.src=t:s.src=n,s.classList.add("important");const a=document.createElement("div");a.innerHTML=`${e.date}`||"--",a.classList.add("date"),o++,c.appendChild(r),c.appendChild(i),c.appendChild(s),c.appendChild(a),d.appendChild(c),s.addEventListener("click",(()=>{"no"===e.important?(s.src=t,e.important="yes"):(s.src=n,e.important="no")})),"yes"==e.completed&&(i.style.textDecoration="line-through",c.style.backgroundColor="#d4d4d4",r.checked=!0),r.addEventListener("click",(()=>{1==r.checked?(i.style.textDecoration="line-through",c.style.backgroundColor="#d4d4d4",e.completed="yes"):(i.style.textDecoration="none",c.style.backgroundColor="rgb(222, 222, 252)",e.completed="no")}))}function i(){document.querySelectorAll(".options");const e=document.querySelector(".active");let t=[];for(let n of J)e.innerHTML==n.projectname&&t.push(n);if(t.length){c.innerHTML=`${e.innerHTML}`,d.innerHTML="";for(let e of t)r(e)}else d.innerHTML="",f(e.innerHTML)}function s(e,t,n,o,d){return{name:e,projectname:t,important:n,date:o,completed:d}}const a=document.querySelector(".rightpanel"),l=document.querySelector(".rightpanelheading"),u=document.querySelector(".tasks");u.innerHTML="";const m=document.createElement("div");m.classList.add("addtask"),m.innerHTML="+";let p=!0;const L=document.querySelector(".popupcontainer");let h=!0;function f(e){l.innerHTML=`${e}`,u.innerHTML="",p&&(p=!1,a.appendChild(m)),m.addEventListener("click",(()=>{!function(){h=!0,L.classList.remove("hidden");const e=document.querySelector(".formbox"),t=document.querySelector(".buttons");t.innerHTML="";const n=document.createElement("button"),o=document.createElement("button");n.innerHTML="Add",o.innerHTML="Cancel",o.setAttribute("type","button"),n.setAttribute("type","button"),t.appendChild(n),t.appendChild(o),n.addEventListener("click",(()=>{!function(){const e=document.querySelector(".active"),t=document.getElementById("title"),n=document.getElementById("important"),o=document.getElementById("date"),d=new s(t.value,e.innerHTML,n.value,o.value,"no");J.push(d),t.value="",n.value="no",o.value=""}(),L.classList.add("hidden"),h=!1,i()})),o.addEventListener("click",(e=>{L.classList.add("hidden")})),document.addEventListener("keydown",(e=>{h&&"Enter"===e.key&&n.click()})),e.addEventListener("click",(e=>{e.stopPropagation()})),L.addEventListener("click",(e=>{e.stopPropagation(),L.classList.add("hidden")}))}()}))}let y=0,g=document.querySelectorAll(".option");function T(){g.forEach((e=>{e.classList.remove("selected")}))}function k(){document.querySelector(".active").classList.remove("active")}const v=document.querySelector(".projectcontainer");let E=!0,H=!0;function M(){if(E){const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","inputbox"),e.style.margin="8px 12px";const t=document.createElement("projecticon");t.classList.add("projecticon"),t.style.backgroundColor=`${G[y]}`,y++,6==y&&(y=0);const n=document.createElement("div"),o=document.createElement("div");o.classList.add("option"),o.classList.add("projectoption"),v.appendChild(e),e.focus(),E=!1;let d=!1;document.addEventListener("keydown",(c=>{"Enter"!=c.key||""===e.value||d||(n.innerHTML=`${e.value}`,v.removeChild(e),E=!0,o.appendChild(t),o.appendChild(n),v.appendChild(o),g=document.querySelectorAll(".option"),T(),H||k(),o.classList.add("selected"),n.classList.add("active"),H=!1,f(e.value),d=!0,document.removeEventListener("keydown",(()=>{})))})),o.addEventListener("click",(()=>{T(),k(),o.classList.add("selected"),n.classList.add("active"),J.length?i():f(document.querySelector(".active").innerHTML)}))}else v.removeChild(document.getElementById("inputbox")),E=!0}const b=document.querySelector(".rightpanelheading"),S=document.querySelector(".tasks");let q=[];function C(e){if(b.innerHTML="Your Today's Tasks",S.innerHTML="",e.length){S.innerHTML="";const t=new Date;q=[];for(let n of e){const e=new Date(n.date);t.toDateString()==e.toDateString()&&q.push(n)}if(q.length){S.innerHTML="";for(let e of q)r(e)}else S.innerHTML="No tasks scheduled for today"}else{S.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),S.appendChild(e),e.addEventListener("click",M)}}const w=document.querySelector(".rightpanelheading"),j=document.querySelector(".tasks");let A=[];const x=document.querySelector(".rightpanelheading"),D=document.querySelector(".tasks");let $=[];const B=document.querySelector(".rightpanelheading"),I=document.querySelector(".tasks");let N=[];const P=document.getElementById("today"),O=document.getElementById("thisweek"),F=document.getElementById("importantmenu"),Y=document.getElementById("completed"),z=document.querySelector(".addproject"),G=["#ffaeae","#ffee93","#ffc09f","#a39fe1","#fcf5c7","#a0ced9","#adf7b6"];let J=[];C(J),P.addEventListener("click",(()=>{T(),P.classList.add("selected"),C(J)})),O.addEventListener("click",(()=>{T(),O.classList.add("selected"),function(e){if(w.innerHTML="Tasks for this week",j.innerHTML="",e.length){A=[],j.innerHTML="";const t=new Date,n=t.getDay(),o=t.getTime()-864e5*n,d=t.getTime()+864e5*(7-n);for(let t of e){const e=new Date(t.date);e.getTime()>o&&e.getTime()<d&&A.push(t)}if(A.length){j.innerHTML="";for(let e of A)r(e)}else j.innerHTML="No tasks scheduled for this week"}else{j.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),j.appendChild(e),e.addEventListener("click",M)}}(J)})),F.addEventListener("click",(()=>{T(),F.classList.add("selected"),function(e){if(x.innerHTML="Important Tasks",D.innerHTML="",e.length){D.innerHTML="",$=[];for(let t of e)new Date(t.date),"yes"==t.important&&$.push(t);if($.length){D.innerHTML="";for(let e of $)r(e)}else D.innerHTML="No tasks marked as important"}else{D.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),D.appendChild(e),e.addEventListener("click",M)}}(J)})),Y.addEventListener("click",(()=>{T(),Y.classList.add("selected"),function(e){if(B.innerHTML="Completed Tasks",I.innerHTML="",e.length){N=[],I.innerHTML="";for(let t of e)"yes"==t.completed&&N.push(t);if(N.length){I.innerHTML="";for(let e of N)r(e)}else I.innerHTML="No tasks completed"}else I.innerHTML="No tasks completed"}(J)})),z.addEventListener("click",M)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,