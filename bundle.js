(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{O:()=>B,w:()=>D});let t=1;const n=document.querySelector(".tasks"),d=document.querySelector(".rightpanelheading");function c(e){const d=document.createElement("div");d.classList.add("task");const c=document.createElement("input");c.type="checkbox",c.id=`${t}`,c.classList.add("checkbox");const o=document.createElement("label");o.setAttribute("for",`${t}`),o.innerHTML=`${e.name}`;const i=document.createElement("div");i.innerHTML=`${e.priority}`,i.classList.add("priority");const r=document.createElement("div");r.innerHTML=`${e.date}`||"--",r.classList.add("date"),t++,d.appendChild(c),d.appendChild(o),d.appendChild(i),d.appendChild(r),n.appendChild(d)}function o(){document.querySelectorAll(".options");const e=document.querySelector(".active");let t=[];for(let n of D)e.innerHTML==n.projectname&&t.push(n);if(t.length){d.innerHTML=`${e.innerHTML}`,n.innerHTML="";for(let e of t)c(e)}else n.innerHTML="",L(e.innerHTML)}function i(e,t,n,d,c){return{name:e,projectname:t,priority:n,date:d,completed:c}}const r=document.querySelector(".rightpanel"),a=document.querySelector(".rightpanelheading"),s=document.querySelector(".tasks");s.innerHTML="";const l=document.createElement("div");l.classList.add("addtask"),l.innerHTML="+";let u=!0;const m=document.querySelector(".popupcontainer");let p=!0;function L(e){a.innerHTML=`${e}`,s.innerHTML="",u&&(u=!1,r.appendChild(l)),l.addEventListener("click",(()=>{!function(){p=!0,m.classList.remove("hidden");const e=document.querySelector(".formbox"),t=document.querySelector(".buttons");t.innerHTML="";const n=document.createElement("button"),d=document.createElement("button");n.innerHTML="Add",d.innerHTML="Cancel",d.setAttribute("type","button"),n.setAttribute("type","button"),t.appendChild(n),t.appendChild(d),n.addEventListener("click",(()=>{!function(){const e=document.querySelector(".active"),t=document.getElementById("title"),n=document.getElementById("priority"),d=document.getElementById("date"),c=new i(t.value,e.innerHTML,n.value,d.value,"no");D.push(c),t.value="",n.value="low",d.value=""}(),m.classList.add("hidden"),p=!1,o()})),d.addEventListener("click",(e=>{m.classList.add("hidden")})),document.addEventListener("keydown",(e=>{p&&"Enter"===e.key&&n.click()})),e.addEventListener("click",(e=>{e.stopPropagation()})),m.addEventListener("click",(e=>{e.stopPropagation(),m.classList.add("hidden")}))}()}))}let y=0,f=document.querySelectorAll(".option");function h(){f.forEach((e=>{e.classList.remove("selected")}))}function v(){document.querySelector(".active").classList.remove("active")}const T=document.querySelector(".projectcontainer");let E=!0,k=!0;function g(){if(E){const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","inputbox"),e.style.margin="8px 12px";const t=document.createElement("projecticon");t.classList.add("projecticon"),t.style.backgroundColor=`${B[y]}`,y++,6==y&&(y=0);const n=document.createElement("div"),d=document.createElement("div");d.classList.add("option"),d.classList.add("projectoption"),T.appendChild(e),e.focus(),E=!1;let c=!1;document.addEventListener("keydown",(o=>{"Enter"!=o.key||""===e.value||c||(n.innerHTML=`${e.value}`,T.removeChild(e),E=!0,d.appendChild(t),d.appendChild(n),T.appendChild(d),f=document.querySelectorAll(".option"),h(),k||v(),d.classList.add("selected"),n.classList.add("active"),k=!1,L(e.value),c=!0,document.removeEventListener("keydown",(()=>{})))})),d.addEventListener("click",(()=>{h(),v(),d.classList.add("selected"),n.classList.add("active"),D.length?o():L(document.querySelector(".active").innerHTML)}))}else T.removeChild(document.getElementById("inputbox")),E=!0}const H=document.querySelector(".rightpanelheading"),M=document.querySelector(".tasks");let S=[];function b(e){if(H.innerHTML="Your Today's Tasks",M.innerHTML="",e.length){M.innerHTML="";const t=new Date;S=[];for(let n of e){const e=new Date(n.date);t.toDateString()==e.toDateString()&&S.push(n)}if(S.length){M.innerHTML="";for(let e of S)c(e)}else M.innerHTML="No tasks scheduled for today"}else{M.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),M.appendChild(e),e.addEventListener("click",g)}}const q=document.querySelector(".rightpanelheading"),C=document.querySelector(".tasks");let j=[];const w=document.getElementById("today"),A=document.getElementById("thisweek"),$=document.getElementById("stickywall"),x=document.querySelector(".addproject"),B=["#ffaeae","#ffee93","#ffc09f","#a39fe1","#fcf5c7","#a0ced9","#adf7b6"];let D=[];b(D),w.addEventListener("click",(()=>{h(),w.classList.add("selected"),b(D)})),A.addEventListener("click",(()=>{h(),A.classList.add("selected"),function(e){if(q.innerHTML="Tasks for this week",C.innerHTML="",e.length){j=[],C.innerHTML="";const t=new Date,n=t.getDay(),d=t.getTime()-864e5*n,o=t.getTime()+864e5*(7-n);for(let t of e){const e=new Date(t.date);e.getTime()>d&&e.getTime()<o&&j.push(t)}if(j.length){C.innerHTML="";for(let e of j)c(e)}else C.innerHTML="No tasks scheduled for today"}else{C.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),C.appendChild(e),e.addEventListener("click",g)}}(D)})),$.addEventListener("click",(()=>{h(),$.classList.add("selected")})),x.addEventListener("click",g)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,