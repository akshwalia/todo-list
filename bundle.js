(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{O:()=>$,w:()=>x});let t=1;const n=document.querySelector(".tasks"),d=document.querySelector(".rightpanelheading");function c(e){const d=document.createElement("div");d.classList.add("task");const c=document.createElement("input");c.type="checkbox",c.id=`${t}`;const o=document.createElement("label");o.setAttribute("for",`${t}`),o.innerHTML=`${e.name}`;const r=document.createElement("div");r.innerHTML=`${e.priority}`;const i=document.createElement("div");i.innerHTML=`${e.date}`||"--",t++,d.appendChild(c),d.appendChild(o),d.appendChild(r),d.appendChild(i),n.appendChild(d)}function o(){document.querySelectorAll(".options");const e=document.querySelector(".active");let t=[];for(let n of x)e.innerHTML==n.projectname&&t.push(n);if(t.length){d.innerHTML=`${e.innerHTML}`,n.innerHTML="";for(let e of t)c(e)}else n.innerHTML="",L(e.innerHTML)}function r(e,t,n,d,c){return{name:e,projectname:t,priority:n,date:d,completed:c}}const i=document.querySelector(".rightpanel"),a=document.querySelector(".rightpanelheading"),l=document.querySelector(".tasks");l.innerHTML="";const s=document.createElement("button");s.innerHTML="Add Task";let u=!0;const m=document.querySelector(".popupcontainer");let p=!0;function L(e){a.innerHTML=`${e}`,l.innerHTML="yayyy you created project",u&&(u=!1,i.appendChild(s)),s.addEventListener("click",(()=>{!function(){p=!0,m.classList.remove("hidden");const e=document.querySelector(".formbox"),t=document.querySelector(".buttons");t.innerHTML="";const n=document.createElement("button"),d=document.createElement("button");n.innerHTML="Add",d.innerHTML="Cancel",d.setAttribute("type","button"),n.setAttribute("type","button"),t.appendChild(n),t.appendChild(d),n.addEventListener("click",(()=>{!function(){const e=document.querySelector(".active"),t=document.getElementById("title"),n=document.getElementById("priority"),d=document.getElementById("date"),c=new r(t.value,e.innerHTML,n.value,d.value,"no");x.push(c),t.value="",n.value="low",d.value=""}(),m.classList.add("hidden"),p=!1,o()})),d.addEventListener("click",(e=>{m.classList.add("hidden")})),document.addEventListener("keydown",(e=>{p&&"Enter"===e.key&&n.click()})),e.addEventListener("click",(e=>{e.stopPropagation()})),m.addEventListener("click",(e=>{e.stopPropagation(),m.classList.add("hidden")}))}()}))}let y=0,v=document.querySelectorAll(".option");function h(){v.forEach((e=>{e.classList.remove("selected")}))}function f(){document.querySelector(".active").classList.remove("active")}const E=document.querySelector(".projectcontainer");let k=!0,T=!0;function g(){if(k){const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","inputbox"),e.style.margin="8px 12px";const t=document.createElement("projecticon");t.classList.add("projecticon"),t.style.backgroundColor=`${$[y]}`,y++,6==y&&(y=0);const n=document.createElement("div"),d=document.createElement("div");d.classList.add("option"),d.classList.add("projectoption"),E.appendChild(e),e.focus(),k=!1;let c=!1;document.addEventListener("keydown",(o=>{"Enter"!=o.key||""===e.value||c||(n.innerHTML=`${e.value}`,E.removeChild(e),k=!0,d.appendChild(t),d.appendChild(n),E.appendChild(d),v=document.querySelectorAll(".option"),h(),T||f(),d.classList.add("selected"),n.classList.add("active"),T=!1,L(e.value),c=!0,document.removeEventListener("keydown",(()=>{})))})),d.addEventListener("click",(()=>{h(),f(),d.classList.add("selected"),n.classList.add("active"),x.length?o():L(document.querySelector(".active").innerHTML)}))}else E.removeChild(document.getElementById("inputbox")),k=!0}const H=document.querySelector(".rightpanelheading"),M=document.querySelector(".tasks");function b(e){if(H.innerHTML="Your Today's Tasks",!e.length){M.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),M.appendChild(e),e.addEventListener("click",g)}}const q=document.querySelector(".rightpanelheading"),S=document.querySelector(".tasks"),C=document.getElementById("today"),j=document.getElementById("thisweek"),A=document.getElementById("stickywall"),w=document.querySelector(".addproject"),$=["#ffaeae","#ffee93","#ffc09f","#a39fe1","#fcf5c7","#a0ced9","#adf7b6"];let x=[];b(x),C.addEventListener("click",(()=>{h(),C.classList.add("selected"),b(x)})),j.addEventListener("click",(()=>{h(),j.classList.add("selected"),function(e){if(q.innerHTML="Tasks for this week",console.log(e),!e.length){S.innerHTML="No Task here, add a project and add tasks to get started";const e=document.createElement("div");e.innerHTML="+ Add Project",e.classList.add("addprojectfresh"),S.appendChild(e),e.addEventListener("click",g)}}(x)})),A.addEventListener("click",(()=>{h(),A.classList.add("selected")})),w.addEventListener("click",g)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,